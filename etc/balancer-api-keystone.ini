[DEFAULT]
# Address to bind the server to
bind_host = 0.0.0.0

# Port the bind the server to
bind_port = 8181
log_file = logs/balancer-api.log
debug = True
db_path = db/balancer.db


[pipeline:balancer-api]
#pipeline = versionnegotiation context apiv1app
# NOTE: use the following pipeline for keystone
pipeline =  authtoken auth-context apiv1app

# To enable Image Cache Management API replace pipeline with below:
# pipeline = versionnegotiation context imagecache apiv1app
# NOTE: use the following pipeline for keystone auth (with caching)
# pipeline = versionnegotiation authtoken auth-context imagecache apiv1app

[app:apiv1app]
#paste.app_factory = balancer.common.wsgi:app_factory
paste.app_factory = balancer.api.v1.router:API

#[filter:versionnegotiation]
#paste.filter_factory = balancer.common.wsgi:filter_factory
#balancer.filter_factory = balancer.api.middleware.version_negotiation:VersionNegotiationFilter

[filter:context]
paste.filter_factory = balancer.common.wsgi:filter_factory
balancer.filter_factory = balancer.common.context:ContextMiddleware

[filter:authtoken]
paste.filter_factory = keystone.middleware.auth_token:filter_factory
# FIXME(dtroyer): remove these service_* entries after auth_token is updated
service_host = 127.0.0.1
service_port = 5000
service_protocol = http
auth_host = 127.0.0.1
auth_port = 35357
auth_protocol = http
auth_uri = http://127.0.0.1:5000/
# FIXME(dtroyer): remove admin_token after auth_token is updated
admin_token = swordfish
admin_tenant_name = admin
admin_user = admin
admin_password = swordfish

[filter:auth-context]
paste.filter_factory = balancer.common.wsgi:filter_factory
balancer.filter_factory = keystone.middleware.balancer_auth_token:KeystoneContextMiddleware
